{"version":3,"sources":["firebase.js","components/todo.jsx","App.js","reportWebVitals.js","index.js"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","createData","name","calories","fat","carbs","protein","todoCol","collection","validationSchema","yup","title","required","id","a","deleteDoc","doc","RealtimeTodo","useState","todo","settodo","useEffect","q","query","orderBy","unsubscribe","onSnapshot","snapshot","temp","forEach","data","unshift","description","console","log","formik","useFormik","initialValues","onSubmit","values","addDoc","timestamp","serverTimestamp","docRef","error","Box","sx","flexGrow","m","Typography","variant","component","handleSubmit","Stack","spacing","TextField","fullWidth","color","label","value","onChange","handleChange","touched","Boolean","errors","helperText","Button","type","TableContainer","Paper","marginTop","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","map","eachTodo","i","border","scope","onClick","del","App","AppBar","position","Toolbar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3c43b9f.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\"\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBx4grpYuOpHfpFRRrlzBhtZwfQkotcaHM\",\r\n  authDomain: \"reacttodoapp-4643a.firebaseapp.com\",\r\n  projectId: \"reacttodoapp-4643a\",\r\n  storageBucket: \"reacttodoapp-4643a.appspot.com\",\r\n  messagingSenderId: \"541416024823\",\r\n  appId: \"1:541416024823:web:e4fe51af6afae48ebf41f2\"\r\n};\r\n\r\n\r\ninitializeApp(firebaseConfig);\r\nexport const db = getFirestore();","import { useFormik } from \"formik\";\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport * as yup from 'yup';\r\nimport { useEffect, useState } from \"react\"\r\nimport { collection, addDoc, onSnapshot, query, serverTimestamp, orderBy, deleteDoc, doc } from \"firebase/firestore\"\r\nimport { db } from '../firebase'\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\n\r\n\r\n\r\nconst todoCol = collection(db, \"todo\")\r\n\r\nconst validationSchema = yup.object({\r\n  title: yup\r\n    .string('Enter your email')\r\n    .required('Email is required'),\r\n});\r\n\r\nasync function del(id) {\r\n  await deleteDoc(doc(todoCol, id));\r\n}\r\n\r\nfunction RealtimeTodo() {\r\n  const [todo, settodo] = useState([])\r\n\r\n  useEffect(() => {\r\n\r\n    const q = query(todoCol, orderBy(\"timestamp\"));\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n\r\n      let temp = [];\r\n      snapshot.forEach((doc) => {\r\n\r\n        let id = doc.id;\r\n        let data = doc.data();\r\n\r\n        temp.unshift({\r\n          id: id,\r\n          title: data.title,\r\n          description: data.description\r\n        });\r\n      })\r\n      settodo(temp)\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe()\r\n      console.log(\"unsub\")\r\n    };\r\n  }, []);\r\n\r\n  const formik = useFormik({\r\n\r\n    initialValues: {\r\n      title: \"\",\r\n      description: \"\"\r\n    },\r\n    onSubmit: async (values) => {\r\n      try {\r\n        const docRef = await addDoc(todoCol, {\r\n          title: values.title,\r\n          description: values.description,\r\n          timestamp: serverTimestamp()\r\n        });\r\n        console.log(\"Document written with ID: \", docRef.id);\r\n      } catch (e) {\r\n        console.error(\"Error adding document: \", e);\r\n      }\r\n    },\r\n    validationSchema: validationSchema,\r\n  });\r\n\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1, m: 2 }} >\r\n\r\n      <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n        Realtime Todo\r\n      </Typography>\r\n\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Stack spacing={2}>\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n\r\n            name=\"title\"\r\n            value={formik.values.title}\r\n            onChange={formik.handleChange}\r\n\r\n            error={formik.touched.title && Boolean(formik.errors.title)}\r\n            helperText={formik.touched.title && formik.errors.title}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n\r\n            name=\"description\"\r\n            value={formik.values.description}\r\n            onChange={formik.handleChange}\r\n\r\n            error={formik.touched.description && Boolean(formik.errors.description)}\r\n            helperText={formik.touched.description && formik.errors.description}\r\n          />\r\n\r\n          <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Add Todo</Button>\r\n        </Stack>\r\n\r\n      </form>\r\n\r\n      <TableContainer component={Paper} sx={{ marginTop: 10 }}>\r\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Task ID</TableCell>\r\n              <TableCell align=\"right\">Task Name</TableCell>\r\n              <TableCell align=\"right\">Task Description </TableCell>\r\n              <TableCell align=\"right\">Task Action </TableCell>\r\n\r\n\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n\r\n          <TableBody>\r\n\r\n            {todo.map((eachTodo, i) => {\r\n\r\n              return (\r\n\r\n                <TableRow key={i} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n\r\n                  <TableCell component=\"th\" scope=\"row\">{eachTodo.id}</TableCell>\r\n                  <TableCell align=\"right\">{eachTodo.title}</TableCell>\r\n                  <TableCell align=\"right\">{eachTodo.description}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <Button variant=\"outlined\" onClick={() => { del(eachTodo.id) }}>Delete</Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default RealtimeTodo;","import './App.css';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport ToDo from './components/todo';\n\nfunction App() {\n  return (\n    <>\n      <Box sx={{ flexGrow: 1 }}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography  variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              Firestore Todo-App\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <ToDo />\n          \n      </Box>\n    </>\n  )\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}